{"ast":null,"code":"import _classCallCheck from \"/home/sagarshrestha/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sagarshrestha/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sagarshrestha/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sagarshrestha/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sagarshrestha/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/sagarshrestha/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/sagarshrestha/dashboard/src/vibe/components/Chat/Chat.js\";\nimport React from 'react';\nimport ChatElements from './ChatElements';\nimport FA from 'react-fontawesome';\n\nfunction Container(_ref) {\n  var children = _ref.children;\n  return React.createElement(\"div\", {\n    className: \"ChatBoxContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, children);\n}\n\nfunction CloseChatBox(_ref2) {\n  var close = _ref2.close;\n  return React.createElement(\"button\", {\n    className: \"CloseChat\",\n    onClick: close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(FA, {\n    name: \"times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Close Chat\"));\n}\n\nfunction ChatHeaderStatus(_ref3) {\n  var status = _ref3.status;\n  var color = status === 'online' ? 'text-success' : status === 'offline' ? 'text-muted' : 'text-muted';\n  return React.createElement(\"span\", {\n    className: \"m-r\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(FA, {\n    name: \"circle\",\n    className: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n}\n\nfunction ChatBoxHeader(_ref4) {\n  var close = _ref4.close,\n      isExpanded = _ref4.isExpanded,\n      name = _ref4.name,\n      status = _ref4.status,\n      toggle = _ref4.toggle;\n  var screenReaderText = isExpanded ? 'Hide Chat' : 'Show Chat';\n  return React.createElement(\"header\", {\n    className: \"ChatHeader\",\n    onClick: toggle,\n    onKeyPress: toggle,\n    tabIndex: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, status && React.createElement(ChatHeaderStatus, {\n    status: status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, screenReaderText), name, React.createElement(CloseChatBox, {\n    close: close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n}\n\nvar ChatBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChatBox, _React$Component);\n\n  function ChatBox(props) {\n    var _this;\n\n    _classCallCheck(this, ChatBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatBox).call(this, props));\n    _this.state = {\n      expanded: false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ChatBox, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          expanded: !prevState.expanded\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"ChatBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(ChatBoxHeader, {\n        name: this.props.name,\n        toggle: this.toggle,\n        isExpanded: this.state.isExpanded,\n        status: this.props.status,\n        close: this.props.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), this.state.expanded && React.createElement(ChatElements, {\n        image: this.props.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ChatBox;\n}(React.Component);\n\nvar Chat = {\n  Container: Container,\n  ChatBox: ChatBox\n};\nexport default Chat;","map":{"version":3,"sources":["/home/sagarshrestha/dashboard/src/vibe/components/Chat/Chat.js"],"names":["React","ChatElements","FA","Container","children","CloseChatBox","close","ChatHeaderStatus","status","color","ChatBoxHeader","isExpanded","name","toggle","screenReaderText","ChatBox","props","state","expanded","bind","setState","prevState","image","Component","Chat"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,EAAP,MAAe,mBAAf;;AAEA,SAASC,SAAT,OAAiC;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC/B,SAAO;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,QAAnC,CAAP;AACD;;AAED,SAASC,YAAT,QAAiC;AAAA,MAATC,KAAS,SAATA,KAAS;AAC/B,SACE;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,OAAO,EAAEA,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,EAAD;AAAI,IAAA,IAAI,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF;AAMD;;AAED,SAASC,gBAAT,QAAsC;AAAA,MAAVC,MAAU,SAAVA,MAAU;AACpC,MAAMC,KAAK,GAAGD,MAAM,KAAK,QAAX,GAAsB,cAAtB,GAAuCA,MAAM,KAAK,SAAX,GAAuB,YAAvB,GAAsC,YAA3F;AACA,SACE;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,EAAD;AAAI,IAAA,IAAI,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAEC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,SAASC,aAAT,QAAoE;AAAA,MAA3CJ,KAA2C,SAA3CA,KAA2C;AAAA,MAApCK,UAAoC,SAApCA,UAAoC;AAAA,MAAxBC,IAAwB,SAAxBA,IAAwB;AAAA,MAAlBJ,MAAkB,SAAlBA,MAAkB;AAAA,MAAVK,MAAU,SAAVA,MAAU;AAClE,MAAMC,gBAAgB,GAAGH,UAAU,GAAG,WAAH,GAAiB,WAApD;AACA,SACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAEE,MAAxC;AAAgD,IAAA,UAAU,EAAEA,MAA5D;AAAoE,IAAA,QAAQ,EAAE,CAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,MAAM,IAAI,oBAAC,gBAAD;AAAkB,IAAA,MAAM,EAAEA,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADb,EAEE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BM,gBAA3B,CAFF,EAGGF,IAHH,EAIE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEN,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD;;IAEKS,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGA,UAAKL,MAAL,GAAc,MAAKA,MAAL,CAAYM,IAAZ,uDAAd;AALiB;AAMlB;;;;6BACQ;AACP,WAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAAEH,UAAAA,QAAQ,EAAE,CAACG,SAAS,CAACH;AAAvB,SAAL;AAAA,OAAvB;AACD;;;6BACQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACE,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWJ,IADnB;AAEE,QAAA,MAAM,EAAE,KAAKC,MAFf;AAGE,QAAA,UAAU,EAAE,KAAKI,KAAL,CAAWN,UAHzB;AAIE,QAAA,MAAM,EAAE,KAAKK,KAAL,CAAWR,MAJrB;AAKE,QAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWV,KALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQG,KAAKW,KAAL,CAAWC,QAAX,IAAuB,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWM,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAR1B,CADF;AAYD;;;;EAxBmBtB,KAAK,CAACuB,S;;AA2B5B,IAAMC,IAAI,GAAG;AACXrB,EAAAA,SAAS,EAAEA,SADA;AAEXY,EAAAA,OAAO,EAAEA;AAFE,CAAb;AAKA,eAAeS,IAAf","sourcesContent":["import React from 'react';\nimport ChatElements from './ChatElements';\nimport FA from 'react-fontawesome';\n\nfunction Container({ children }) {\n  return <div className=\"ChatBoxContainer\">{children}</div>;\n}\n\nfunction CloseChatBox({ close }) {\n  return (\n    <button className=\"CloseChat\" onClick={close}>\n      <FA name=\"times\" />\n      <span className=\"sr-only\">Close Chat</span>\n    </button>\n  );\n}\n\nfunction ChatHeaderStatus({ status }) {\n  const color = status === 'online' ? 'text-success' : status === 'offline' ? 'text-muted' : 'text-muted';\n  return (\n    <span className=\"m-r\">\n      <FA name=\"circle\" className={color} />\n    </span>\n  );\n}\n\nfunction ChatBoxHeader({ close, isExpanded, name, status, toggle }) {\n  const screenReaderText = isExpanded ? 'Hide Chat' : 'Show Chat';\n  return (\n    <header className=\"ChatHeader\" onClick={toggle} onKeyPress={toggle} tabIndex={0}>\n      {status && <ChatHeaderStatus status={status} />}\n      <span className=\"sr-only\">{screenReaderText}</span>\n      {name}\n      <CloseChatBox close={close} />\n    </header>\n  );\n}\n\nclass ChatBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n  toggle() {\n    this.setState(prevState => ({ expanded: !prevState.expanded }));\n  }\n  render() {\n    return (\n      <div className=\"ChatBox\">\n        <ChatBoxHeader\n          name={this.props.name}\n          toggle={this.toggle}\n          isExpanded={this.state.isExpanded}\n          status={this.props.status}\n          close={this.props.close}\n        />\n        {this.state.expanded && <ChatElements image={this.props.image} />}\n      </div>\n    );\n  }\n}\n\nconst Chat = {\n  Container: Container,\n  ChatBox: ChatBox,\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}